{"version":3,"sources":["store/status/actions.ts","store/status/constants.ts","store/status/selectors.ts","store/status/reducer.ts","variables/color.ts","variables/spacing.ts","variables/zIndex.ts","variables/font.ts","variables/shadow.ts","components/ui/Icon/svg/Loading.tsx","components/ui/Icon/svg/Search.tsx","components/ui/Icon/svg/NeutralFace.tsx","components/ui/Icon/svg/SadFace.tsx","components/ui/Icon/svg/HappyFace.tsx","components/ui/Icon/svg/index.tsx","components/ui/Icon/styled.ts","components/ui/Icon/index.tsx","components/ui/Overlay/index.tsx","hooks/useDebounce.tsx","components/ui/Loader/index.tsx","components/ui/Text/styled.ts","components/ui/Search/index.tsx","store/app/constants.ts","store/app/actions.ts","store/patient/actions.ts","store/patient/constants.ts","store/patient/selectors.ts","helpers/domain.ts","helpers/file.ts","helpers/parser.ts","helpers/utility.ts","store/patient/reducer.ts","store/patient/helpers.ts","store/testResult/constants.ts","store/testResult/actions.ts","store/testResult/selectors.ts","store/testResult/reducer.ts","store/testResult/helpers.ts","store/app/sagas.ts","store/app/reducer.ts","store/app/selectors.ts","components/view/Browser/SearchPatient.tsx","components/ui/Text/index.tsx","components/ui/Row/Row.tsx","components/ui/Row/Column.tsx","components/ui/Row/HeaderRow.tsx","components/view/Browser/PatientRow.tsx","components/ui/List/List.tsx","components/ui/List/ListItem.tsx","components/ui/List/FillerList.tsx","components/view/Browser/index.tsx","components/ui/LabeledText/index.tsx","components/view/Content/TestResultRow.tsx","components/view/Content/index.tsx","components/view/index.tsx","App.tsx","serviceWorker.ts","store/root-reducer.ts","store/root-saga.ts","store/store.ts","index.tsx"],"names":["setRequestStatus","createAction","payload","requestStatus","state","request","statusCommunication","initialState","initilized","select_patient","searching","WHITE","LIGHT","DARK","BLACK","SHADOW","TINY","VERY_SMALL","SMALL","MEDIUM","LARGE","VERY_LARGE","HUGE","BASE","TOP_CONTENT","BACK_CONTENT","LOADER","OVERLAY","fontFamily","standard","search","spacing","color","Loading","props","viewBox","d","Search","NeutralFace","SadFace","HappyFace","SvgComponent","icon","baseCss","css","smallIconCss","mediumIconCss","largeIconCss","getStyle","size","iconSize","getSizeCss","Wrapper","styled","span","IconComponent","type","restProps","useMemo","className","Overlay","children","show","aria-hidden","div","zIndex","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","LoaderComponent","isLoading","debouncedInitilizing","setShow","Icon","standardType","font","standardSize","small","medium","large","boldCss","italicCss","variation","fontSize","bold","italic","getVariationCss","onSearch","placeholder","inputRef","useRef","current","focus","onChange","e","currentTarget","ref","inputTextStyle","getTextStyle","shadow","START_SEARCH","START_SELECT","SET_SEARCH_PATIENT_IDS","SET_SELECTED_PATIENT_ID","startSearch","startSelect","setSearchPatientIds","setSelectedPatientId","add","update","remove","set","setDomain","domain","patientData","byId","allIds","allItems","createSelector","map","id","item","ownProps","patientId","R","i","dataPath","a","axios","get","join","then","response","data","rowToRaw","row","properties","replace","split","length","clinicNo","barcode","patientName","dob","gender","collectionDate","collectionTime","testCode","testName","result","unit","refrangeLow","refrangeHigh","note","nonSpecRefs","parseText","text","rows","x","startsWith","raw","isEmpty","stringValue","setDomainFromRawItems","rawItems","rawItemByPatientId","Object","keys","cleanUp","cleanUpId","indexed","val","key","testIds","patientInfo","patient","name","put","patientActions","testResultData","testResultId","getOptionalStringValue","valueString","utilityHelpers","getOptionalNumberValue","returnValue","Number","isNaN","testResults","rawItem","collected","realResult","clinicId","undefined","testResultActions","initializeSaga","startSearchSaga","startSelectSaga","watcher","statusActions","status","call","fileHelpers","parserHelpers","patientHelpers","testResultHelpers","select","patientSelectors","allPatientIds","appActions","action","items","options","weight","shouldSort","threshold","fuse","Fuse","searchResultIds","fuseResultItem","console","log","fork","all","takeLatest","appConstants","searchPatientIds","selectedPatientId","app","selectedPatient","patientById","connect","dispatch","onPatientSearch","Span","TextComponent","styles","Row","columns","columnsStyle","templateColumns","column","Column","align","HeaderRow","headerColumns","headerColum","fr","index","title","Text","HEADER_COLUMNS","List","ul","ListItem","active","header","filler","onClick","rowHeight","aria-expanded","hoverable","height","headerCss","rowCss","hoverCss","li","heightCss","FillerList","numberOfItems","fillers","n","EmptyList","resultPatientIds","appSelectors","isSearching","statusSelectors","selectPatientId","Loader","LabeledText","label","testResult","testResultSelectors","diagnoseColumnm","rangeValue","isSelecting","testId","View","initilizing","SiteWrapper","Boolean","window","location","hostname","match","rootReducer","combineReducers","getType","actions","domainHelpers","rootSaga","spawn","appSagas","sagaMiddleware","createSagaMiddleware","middlewares","enhancer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","store","createStore","run","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f4cc93c3.chunk.js","sourcesContent":["import { createAction } from \"typesafe-actions\";\nimport { SET_REQUEST_STATUS } from \"./constants\";\n\nexport const setRequestStatus = createAction(\n  SET_REQUEST_STATUS,\n  (payload: { request: System.RequestType; status: System.RequestStatus }) =>\n    payload\n)();\n","export const SET_REQUEST_STATUS = \"status/SET_REQUEST_STATUS\";\n","import Types from \"Types\";\n\nexport const requestStatus = (\n  state: Types.RootState,\n  request: System.RequestType\n) => state.statusCommunication[request];\n","import { getType } from \"typesafe-actions\";\nimport { StatusAction, StatusState, statusActions as actions } from \".\";\nimport * as R from \"remeda\";\nconst initialState: StatusState = {\n  initilized: \"unstarted\",\n  select_patient: \"unstarted\",\n  searching: \"unstarted\",\n};\n\nexport default (\n  state: StatusState = initialState,\n  action: StatusAction\n): StatusState => {\n  switch (action.type) {\n    case getType(actions.setRequestStatus):\n      const { request, status } = action.payload;\n      return R.set(state, request, status);\n    default:\n      return state;\n  }\n};\n","export const WHITE = \"#fff\";\nexport const LIGHT = \"#E9E9E9\";\nexport const DARK = \"#a7a6a6\";\nexport const BLACK = \"#231F20\";\nexport const SHADOW = \"rgba(35, 31, 32, 0.2)\";\n","export const TINY = 1;\nexport const VERY_SMALL = 2;\nexport const SMALL = 4;\nexport const MEDIUM = 8;\nexport const LARGE = 16;\nexport const VERY_LARGE = 32;\nexport const HUGE = 64;\n","export const BASE = 0;\n\nexport const TOP_CONTENT = 20;\nexport const BACK_CONTENT = 10;\nexport const LOADER = 50;\nexport const OVERLAY = 100;\n","const fontFamily = {\n  standard: `'Roboto', sans-serif`,\n};\n\nexport { fontFamily };\n","import * as spacing from \"./spacing\";\nimport * as color from \"./color\";\n\nexport const search = `inset 0px ${spacing.VERY_SMALL}px ${spacing.SMALL}px -${spacing.VERY_SMALL}px ${color.SHADOW}, inset 0px -${spacing.VERY_SMALL}px ${spacing.SMALL}px -${spacing.VERY_SMALL}px ${color.SHADOW}`;\n","import React, { FunctionComponent, SVGProps } from \"react\";\n\nconst Loading: FunctionComponent<SVGProps<SVGSVGElement>> = (props) => (\n  <svg viewBox=\"0 0 612 612\">\n    <path d=\"M286.875 535.5h38.25v-38.25h-38.25v38.25zM306 76.5c-10.557 0-19.125 8.568-19.125 19.125v191.709h-153c-10.557 0-19.125 8.568-19.125 19.125s8.568 19.125 19.125 19.125H306c10.557 0 19.125-8.568 19.125-19.125V95.625c0-10.557-8.568-19.125-19.125-19.125zM128.769 436.662l26.469 26.526 26.469-26.526-26.469-26.526-26.469 26.526zm56.609-277.485l-27.062-27.042-27.043 27.042 27.043 27.043 27.062-27.043zm236.825-.956l26.47 26.526 26.469-26.526-26.469-26.526-26.47 26.526zM416.6 435.629l27.043 27.043 27.043-27.043-27.043-27.042-27.043 27.042zm80.65-148.754v38.25h38.25v-38.25h-38.25zM306 0C136.992 0 0 137.012 0 306c0 169.008 136.992 306 306 306s306-137.012 306-306S475.008 0 306 0zm0 573.75C158.125 573.75 38.25 453.875 38.25 306S158.125 38.25 306 38.25 573.75 158.125 573.75 306 453.875 573.75 306 573.75z\" />\n  </svg>\n);\n\nexport default Loading;\n","import React, { FunctionComponent, SVGProps } from \"react\";\n\nconst Search: FunctionComponent<SVGProps<SVGSVGElement>> = (props) => (\n  <svg viewBox=\"0 0 612.01 612.01\">\n    <path d=\"M606.209 578.714L448.198 423.228C489.576 378.272 515 318.817 515 253.393 514.98 113.439 399.704 0 257.493 0S.006 113.439.006 253.393s115.276 253.393 257.487 253.393c61.445 0 117.801-21.253 162.068-56.586l158.624 156.099c7.729 7.614 20.277 7.614 28.006 0 7.747-7.613 7.747-19.971.018-27.585zM257.493 467.8c-120.326 0-217.869-95.993-217.869-214.407S137.167 38.986 257.493 38.986c120.327 0 217.869 95.993 217.869 214.407S377.82 467.8 257.493 467.8z\" />\n  </svg>\n);\n\nexport default Search;\n","import React, { FunctionComponent, SVGProps } from \"react\";\n\nconst NeutralFace: FunctionComponent<SVGProps<SVGSVGElement>> = (props) => (\n  <svg viewBox=\"0 0 559.464 559.464\">\n    <path d=\"M411.101 393.094H159.693c-7.434 0-13.468-6.034-13.468-13.468 0-7.443 6.034-13.477 13.468-13.477h251.408c7.434 0 13.468 6.034 13.468 13.477.001 7.435-6.033 13.468-13.468 13.468zM404.107 206.415c0 17.796-14.42 32.216-32.207 32.216s-32.198-14.42-32.198-32.216c0-17.787 14.411-32.207 32.198-32.207s32.207 14.42 32.207 32.207zM218.936 206.415c0 17.796-14.42 32.216-32.198 32.216-17.787 0-32.198-14.42-32.198-32.216 0-17.787 14.411-32.207 32.198-32.207s32.198 14.42 32.198 32.207z\" />\n    <path d=\"M279.732 559.464C125.52 559.464.068 433.976.068 279.737.076 125.488 125.529 0 279.732 0s279.664 125.488 279.664 279.736c0 154.239-125.461 279.728-279.664 279.728zm0-532.518c-139.352 0-252.728 113.403-252.728 252.791s113.376 252.79 252.728 252.79c139.361 0 252.728-113.403 252.728-252.791S419.093 26.946 279.732 26.946z\" />\n  </svg>\n);\n\nexport default NeutralFace;\n","import React, { FunctionComponent, SVGProps } from \"react\";\n\nconst SadFace: FunctionComponent<SVGProps<SVGSVGElement>> = (props) => (\n  <svg viewBox=\"0 0 567.419 567.419\">\n    <path d=\"M409.93 209.297c0 18.056-14.627 32.692-32.683 32.692-18.047 0-32.683-14.636-32.683-32.692s14.636-32.683 32.683-32.683c18.056 0 32.683 14.627 32.683 32.683zM222.011 209.297c0 18.056-14.636 32.692-32.683 32.692s-32.683-14.636-32.683-32.692 14.636-32.683 32.683-32.683 32.683 14.627 32.683 32.683zM172.538 453.621c-7.434 0-13.468-6.025-13.468-13.468 0-58.138 46.762-105.439 104.245-105.439h45.397c57.483 0 104.245 47.04 104.245 104.855 0 7.443-6.025 13.477-13.468 13.477-7.435 0-13.459-6.034-13.459-13.477 0-42.955-34.685-77.91-77.317-77.91h-45.397c-42.632 0-77.308 35.206-77.308 78.493-.002 7.444-6.036 13.469-13.47 13.469z\" />\n    <path d=\"M283.714 567.419C127.311 567.419.072 440.144.072 283.705.072 127.275 127.311 0 283.714 0c156.394 0 283.633 127.275 283.633 283.705 0 156.438-127.239 283.714-283.633 283.714zm0-540.473c-141.552 0-256.705 115.181-256.705 256.759 0 141.588 115.154 256.768 256.705 256.768 141.543 0 256.696-115.181 256.696-256.768 0-141.579-115.153-256.759-256.696-256.759z\" />\n  </svg>\n);\n\nexport default SadFace;\n","import React, { FunctionComponent, SVGProps } from \"react\";\n\nconst HappyFace: FunctionComponent<SVGProps<SVGSVGElement>> = (props) => (\n  <svg viewBox=\"0 0 567.419 567.419\">\n    <path d=\"M409.93 209.297c0 18.056-14.627 32.692-32.683 32.692-18.047 0-32.683-14.636-32.683-32.692s14.636-32.683 32.683-32.683c18.056 0 32.683 14.627 32.683 32.683zM222.011 209.297c0 18.056-14.636 32.692-32.683 32.692s-32.683-14.636-32.683-32.692 14.636-32.683 32.683-32.683 32.683 14.627 32.683 32.683zM308.702 451.466h-45.388c-57.483 0-104.253-46.205-104.253-103.014 0-7.443 6.034-13.468 13.468-13.468s13.468 6.025 13.468 13.468c0 42.659 33.958 76.078 77.317 76.078h45.388c43.359 0 77.317-32.863 77.317-74.821 0-7.443 6.034-13.468 13.468-13.468 7.443 0 13.468 6.025 13.468 13.468.001 57.06-45.792 101.757-104.253 101.757z\" />\n    <path d=\"M283.714 567.419C127.311 567.419.072 440.144.072 283.705.072 127.275 127.311 0 283.714 0c156.394 0 283.633 127.275 283.633 283.705 0 156.438-127.239 283.714-283.633 283.714zm0-540.473c-141.552 0-256.705 115.181-256.705 256.759 0 141.588 115.154 256.768 256.705 256.768 141.543 0 256.696-115.181 256.696-256.768 0-141.579-115.153-256.759-256.696-256.759z\" />\n  </svg>\n);\n\nexport default HappyFace;\n","import React, { FunctionComponent } from \"react\";\n\nimport LoadingIcon from \"./Loading\";\nimport SearchIcon from \"./Search\";\nimport NeutralFaceIcon from \"./NeutralFace\";\nimport SadFaceIcon from \"./SadFace\";\nimport HappyFaceIcon from \"./HappyFace\";\n\ntype Props = {\n  icon: Styles.IconType;\n};\n\nconst SvgComponent: FunctionComponent<Props> = (props) => {\n  const { icon } = props;\n  switch (icon) {\n    case \"loading\":\n      return <LoadingIcon />;\n    case \"search\":\n      return <SearchIcon />;\n    case \"happy-face\":\n      return <HappyFaceIcon />;\n    case \"neutral-face\":\n      return <NeutralFaceIcon />;\n    case \"sad-face\":\n      return <SadFaceIcon />;\n    default:\n      return null;\n  }\n};\n\nexport default SvgComponent;\n","import { color } from \"variables\";\nimport { css } from \"@emotion/core\";\nconst SMALL = 24;\nconst MEDIUM = 32;\nconst LARGE = 64;\n\nconst baseCss = css`\n  display: inline-flex;\n  fill: ${color.BLACK};\n  stroke: ${color.BLACK};\n`;\n\nconst smallIconCss = css`\n  height: ${SMALL}px;\n`;\nconst mediumIconCss = css`\n  height: ${MEDIUM}px;\n`;\nconst largeIconCss = css`\n  height: ${LARGE}px;\n`;\n\nfunction getSizeCss(iconSize: Styles.BaseSize) {\n  switch (iconSize) {\n    case \"small\":\n      return smallIconCss;\n    case \"medium\":\n      return mediumIconCss;\n    case \"large\":\n      return largeIconCss;\n  }\n}\n\nfunction getStyle(size: Styles.BaseSize) {\n  const buttonCss = css`\n    ${baseCss}\n\n    > svg {\n      ${getSizeCss(size)}\n    }\n  `;\n  return buttonCss;\n}\n\nexport default getStyle;\n","import React, { FunctionComponent, useMemo } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { SerializedStyles } from \"@emotion/core\";\nimport SvgComponent from \"./svg\";\nimport getStyle from \"./styled\";\n\nconst Wrapper = styled.span<{ css: SerializedStyles }>`\n  ${({ css }) => css}\n`;\n\ntype OwnProps = {\n  type: Styles.IconType;\n  size: Styles.BaseSize;\n};\n\ntype ElementProps = Pick<\n  React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLSpanElement>,\n    HTMLSpanElement\n  >,\n  \"onClick\"\n>;\ntype Props = OwnProps & ElementProps;\nconst IconComponent: FunctionComponent<Props> = (props) => {\n  const { size, type, ...restProps } = props;\n  const css = useMemo(() => getStyle(size), [size]);\n  return (\n    <Wrapper className=\"icon\" css={css} {...restProps}>\n      <SvgComponent icon={type} />\n    </Wrapper>\n  );\n};\n\nexport default IconComponent;\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { color, zIndex } from \"variables\";\ntype Props = { show: boolean };\nconst Overlay: FunctionComponent<Props> = ({ children, show }) => {\n  return <Wrapper aria-hidden={!show}> {children} </Wrapper>;\n};\n\nexport default Overlay;\n\nconst Wrapper = styled.div`\n  position: absolute;\n  z-index: ${zIndex.OVERLAY};\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${color.SHADOW};\n  transition: opacity 0.4s;\n\n  &[aria-hidden=\"true\"] {\n    opacity: 0;\n  }\n  &[aria-hidden=\"false\"] {\n    opacity: 1;\n  }\n`;\n","import { useState, useEffect } from \"react\";\n\nfunction useDebounce<T>(value: T, delay: number): T {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}\n\nexport default useDebounce;\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { zIndex } from \"variables\";\nimport Icon from \"components/ui/Icon\";\nimport Overlay from \"components/ui/Overlay\";\nimport { useDebounce } from \"hooks\";\n\ntype Props = { isLoading: boolean };\n\nconst LoaderComponent: FunctionComponent<Props> = (props) => {\n  const { isLoading } = props;\n  const debouncedInitilizing = useDebounce(isLoading, 200);\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    setShow(isLoading);\n  }, [isLoading]);\n\n  if (!debouncedInitilizing && show === false) return null;\n\n  return (\n    <Overlay show={show}>\n      <Wrapper>\n        <Icon type=\"loading\" size=\"large\" />\n      </Wrapper>\n    </Overlay>\n  );\n};\n\nexport default LoaderComponent;\n\nconst Wrapper = styled.div`\n  position: relative;\n  top: 0;\n  z-index: ${zIndex.LOADER};\n  .icon {\n    animation: bouncing 1.2s infinite cubic-bezier(0.215, 0.61, 0.355, 1);\n  }\n\n  @keyframes bouncing {\n    0% {\n      transform: scale(0.95);\n    }\n    5% {\n      transform: scale(1.1);\n    }\n    39% {\n      transform: scale(0.85);\n    }\n    45% {\n      transform: scale(1);\n    }\n    60% {\n      transform: scale(0.95);\n    }\n    100% {\n      transform: scale(0.9);\n    }\n  }\n`;\n","import { css } from \"@emotion/core\";\nimport { color, font } from \"variables\";\n\nconst standardType = css`\n  color: ${color.BLACK};\n  font-family: ${font.fontFamily.standard};\n`;\nconst standardSize: Record<Styles.BaseSize, number> = {\n  small: 14,\n  medium: 16,\n  large: 24,\n};\nconst boldCss = css`\n  font-weight: 600;\n`;\nconst italicCss = css`\n  font-style: italic;\n`;\n\nfunction getVariationCss(variation: Styles.TextVariation, fontSize: number) {\n  const { bold, italic } = variation;\n  return css`\n    ${bold && boldCss}\n    ${italic && italicCss}\n  `;\n}\n\nfunction getStyle(\n  type: Styles.TextType,\n  size: Styles.BaseSize,\n  variation?: Styles.TextVariation\n) {\n  switch (type) {\n    case \"standard\":\n      return css`\n        ${standardType}\n        font-size: ${standardSize[size]}px;\n        ${variation && getVariationCss(variation, standardSize[size])}\n      `;\n  }\n}\n\nexport default getStyle;\n","import React, { FunctionComponent, useRef, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { color, spacing, shadow } from \"variables\";\nimport getTextStyle from \"components/ui/Text/styled\";\nimport Icon from \"components/ui/Icon\";\n\ntype Props = { onSearch(search: string): void; placeholder: string };\n\nconst Search: FunctionComponent<Props> = (props) => {\n  const { onSearch, placeholder } = props;\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [inputRef]);\n\n  return (\n    <Wrapper>\n      <input\n        onChange={(e) => onSearch(e.currentTarget.value)}\n        placeholder={placeholder}\n        ref={inputRef}\n      />\n      <Icon type=\"search\" size=\"small\" />\n    </Wrapper>\n  );\n};\n\nexport default Search;\n\nconst inputTextStyle = getTextStyle(\"standard\", \"large\");\n\nconst Wrapper = styled.div`\n  background-color: ${color.WHITE};\n  height: ${spacing.VERY_LARGE + spacing.LARGE}px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: ${spacing.TINY}px solid ${color.DARK};\n  box-shadow: ${shadow.search};\n  padding: 0 ${spacing.MEDIUM}px;\n  > .icon {\n    fill: ${color.DARK};\n  }\n\n  > input {\n    text-transform: lowercase;\n    background-image: none;\n    padding-right: ${spacing.MEDIUM}px;\n    ${inputTextStyle};\n    color: ${color.BLACK};\n\n    ::placeholder {\n      color: ${color.DARK};\n    }\n  }\n`;\n","export const START_SEARCH = \"app/START_SEARCH\";\nexport const START_SELECT = \"app/START_SELECT\";\n\nexport const SET_SEARCH_PATIENT_IDS = \"app/SET_SEARCH_PATIENT_IDS\";\nexport const SET_SELECTED_PATIENT_ID = \"app/SET_SELECTED_PATIENT_ID\";\n","import { createAction } from \"typesafe-actions\";\nimport {\n  START_SEARCH,\n  SET_SEARCH_PATIENT_IDS,\n  SET_SELECTED_PATIENT_ID,\n  START_SELECT,\n} from \"./constants\";\n\nexport const startSearch = createAction(\n  START_SEARCH,\n  (payload: string) => payload\n)();\n\nexport const startSelect = createAction(\n  START_SELECT,\n  (payload: string) => payload\n)();\n\nexport const setSearchPatientIds = createAction(\n  SET_SEARCH_PATIENT_IDS,\n  (payload: string[]) => payload\n)();\n\nexport const setSelectedPatientId = createAction(\n  SET_SELECTED_PATIENT_ID,\n  (payload: string) => payload\n)();\n","import { createAction } from \"typesafe-actions\";\nimport { ADD, UPDATE, REMOVE, SET, SET_DOMAIN } from \"./constants\";\n\nexport const add = createAction(ADD, (payload: Diaverum.Patient) => payload)();\nexport const update = createAction(\n  UPDATE,\n  (payload: PartialWithId<Diaverum.Patient>) => payload\n)();\n\nexport const remove = createAction(REMOVE, (payload: string) => payload)();\n\nexport const set = createAction(SET, (payload: Diaverum.Patient) => payload)();\n\nexport const setDomain = createAction(\n  SET_DOMAIN,\n  (payload: System.NormalizedDomain<Diaverum.Patient>) => payload\n)();\n","export const ADD = \"patient/ADD\";\nexport const UPDATE = \"patient/UPDATE\";\nexport const REMOVE = \"patient/REMOVE\";\nexport const SET = \"patient/SET\";\nexport const SET_DOMAIN = \"patient/SET_DOMAIN\";\n","import { createSelector } from \"reselect\";\nimport * as R from \"remeda\";\nimport Types from \"Types\";\n\nexport const domain = (state: Types.RootState) => state.patientData;\n\nexport const byId = (state: Types.RootState) => state.patientData.byId;\nexport const allIds = (state: Types.RootState) => state.patientData.allIds;\n\nexport const allItems = createSelector(byId, allIds, (byId, allIds) => {\n  return allIds.map((id) => byId[id]);\n});\n\nexport const item = createSelector(\n  (state: Types.RootState, ownProps: { patientId: string }) =>\n    ownProps.patientId,\n  byId,\n  (patientId, byId) => R.pipe(byId, R.prop(patientId))\n);\n","import * as R from \"remeda\";\n\nfunction add<T extends Record<\"id\", string>>(\n  state: System.NormalizedDomain<T>,\n  item: T\n): System.NormalizedDomain<T> {\n  return {\n    byId: R.addProp(state.byId, item.id, item),\n    allIds: [...state.allIds, item.id],\n  };\n}\n\nfunction update<T extends Record<\"id\", string>>(\n  state: System.NormalizedDomain<T>,\n  item: PartialWithId<T>\n): System.NormalizedDomain<T> {\n  return {\n    ...state,\n    byId: R.set(state.byId, item.id, R.merge(state.byId[item.id], item)),\n  };\n}\n\nfunction set<T extends Record<\"id\", string>>(\n  state: System.NormalizedDomain<T>,\n  item: T\n): System.NormalizedDomain<T> {\n  return {\n    byId: R.set(state.byId, item.id, item),\n    allIds: state.allIds,\n  };\n}\n\nfunction remove<T extends Record<\"id\", string>>(\n  state: System.NormalizedDomain<T>,\n  id: string\n): System.NormalizedDomain<T> {\n  return {\n    byId: R.omit(state.byId, [id]),\n    allIds: R.reject(state.allIds, (i) => i === id),\n  };\n}\n\nexport default { add, update, remove, set };\n","import axios from \"axios\";\n\nasync function readTextFile(dataPath: string[]) {\n  return axios\n    .get<string>(dataPath.join(\"/\"))\n    .then((response) => response.data);\n}\n\nexport default { readTextFile };\n","import * as R from \"remeda\";\n\nfunction rowToRaw(row: string): Diaverum.RawItem | null {\n  const properties = row.replace(/\\r?\\n|\\r/g, \"\").split(\"|\"); // clean and split\n  if (properties.length !== 16) return null;\n  return {\n    clinicNo: properties[0],\n    barcode: properties[1],\n    patientId: properties[2],\n    patientName: properties[3],\n    dob: properties[4],\n    gender: properties[5],\n    collectionDate: properties[6],\n    collectionTime: properties[7],\n    testCode: properties[8],\n    testName: properties[9],\n    result: properties[10],\n    unit: properties[11],\n    refrangeLow: properties[12],\n    refrangeHigh: properties[13],\n    note: properties[14],\n    nonSpecRefs: properties[15],\n  };\n}\n\nfunction parseText(text: string): Diaverum.RawItem[] {\n  const rows = text.split(\"\\n\");\n  const rawItems = R.pipe(\n    rows,\n    R.filter((x) => !x.startsWith(\"#\")), // remove all comment rows\n    R.splitAt(1), // first row is header\n    R.last, // only rows with data,\n    (value) => (value ? value : []), // handle undefined\n    R.map(rowToRaw), // to raw data format\n    R.filter((raw) => !!raw) // filter away null, shouldn't really need to\n  );\n  return rawItems as Diaverum.RawItem[];\n}\n\nexport default { parseText, rowToRaw };\n","function isEmpty(stringValue: string) {\n  return !stringValue || stringValue.length === 0;\n}\n\nexport default { isEmpty };\n","/* eslint-disable no-case-declarations */\nimport { getType } from \"typesafe-actions\";\nimport {\n  PatientAction,\n  PatientState,\n  patientActions as actions,\n} from \"store/patient\";\nimport { domainHelpers } from \"helpers\";\n\nconst initialState: PatientState = { allIds: [], byId: {} };\n\nexport default (\n  state: PatientState = initialState,\n  action: PatientAction\n): PatientState => {\n  switch (action.type) {\n    case getType(actions.add):\n      return domainHelpers.add(state, action.payload);\n    case getType(actions.set):\n      return domainHelpers.set(state, action.payload);\n    case getType(actions.update):\n      return domainHelpers.update(state, action.payload);\n    case getType(actions.remove):\n      return domainHelpers.remove(state, action.payload);\n    case getType(actions.setDomain):\n      const { allIds, byId } = action.payload;\n      return { allIds, byId };\n    default:\n      return state;\n  }\n};\n","import { put } from \"redux-saga/effects\";\nimport { patientActions } from \"store/patient\";\nimport * as R from \"remeda\";\n\nfunction* setDomainFromRawItems(rawItems: Diaverum.RawItem[]) {\n  const rawItemByPatientId = R.pipe(rawItems, R.groupBy(R.prop(\"patientId\")));\n\n  let allIds = Object.keys(rawItemByPatientId);\n  let byId: Record<string, Diaverum.Patient> = {};\n\n  // cleanup operation if something is fishy\n  const cleanUp = (cleanUpId: string) => {\n    allIds = R.reject(allIds, (id) => id === cleanUpId);\n  };\n\n  R.forEachObj.indexed(rawItemByPatientId, (val, key) => {\n    const testIds = R.map(val, R.prop(\"barcode\"));\n    const patientInfo = R.last(val);\n\n    // can't happen\n    if (!patientInfo) return cleanUp(key);\n\n    const { dob, gender, patientId, patientName } = patientInfo;\n\n    const patient: Diaverum.Patient = {\n      id: patientId,\n      name: patientName,\n      gender: gender as Diaverum.Gender,\n      dob,\n      testIds,\n    };\n\n    byId = R.addProp(byId, key, patient);\n  });\n\n  yield put(patientActions.setDomain({ byId, allIds }));\n}\n\nexport { setDomainFromRawItems };\n","export const ADD = \"testResult/ADD\";\nexport const UPDATE = \"testResult/UPDATE\";\nexport const REMOVE = \"testResult/REMOVE\";\nexport const SET = \"testResult/SET\";\nexport const SET_DOMAIN = \"testResult/SET_DOMAIN\";\n","import { createAction } from \"typesafe-actions\";\nimport { ADD, UPDATE, REMOVE, SET, SET_DOMAIN } from \"./constants\";\n\nexport const add = createAction(\n  ADD,\n  (payload: Diaverum.TestResult) => payload\n)();\nexport const update = createAction(\n  UPDATE,\n  (payload: PartialWithId<Diaverum.TestResult>) => payload\n)();\n\nexport const remove = createAction(REMOVE, (payload: string) => payload)();\n\nexport const set = createAction(\n  SET,\n  (payload: Diaverum.TestResult) => payload\n)();\n\nexport const setDomain = createAction(\n  SET_DOMAIN,\n  (payload: System.NormalizedDomain<Diaverum.TestResult>) => payload\n)();\n","import { createSelector } from \"reselect\";\nimport * as R from \"remeda\";\nimport Types from \"Types\";\n\nexport const domain = (state: Types.RootState) => state.testResultData;\n\nexport const byId = (state: Types.RootState) => state.testResultData.byId;\nexport const allIds = (state: Types.RootState) => state.testResultData.allIds;\n\nexport const allItems = createSelector(byId, allIds, (byId, allIds) => {\n  return allIds.map((id) => byId[id]);\n});\n\nexport const item = createSelector(\n  (state: Types.RootState, ownProps: { testResultId: string }) =>\n    ownProps.testResultId,\n  byId,\n  (testResultId, byId) => R.pipe(byId, R.prop(testResultId))\n);\n","/* eslint-disable no-case-declarations */\nimport { getType } from \"typesafe-actions\";\nimport {\n  TestResultAction,\n  TestResultState,\n  testResultActions as actions,\n} from \"store/testResult\";\nimport { domainHelpers } from \"helpers\";\n\nconst initialState: TestResultState = { allIds: [], byId: {} };\n\nexport default (\n  state: TestResultState = initialState,\n  action: TestResultAction\n): TestResultState => {\n  switch (action.type) {\n    case getType(actions.add):\n      return domainHelpers.add(state, action.payload);\n    case getType(actions.set):\n      return domainHelpers.set(state, action.payload);\n    case getType(actions.update):\n      return domainHelpers.update(state, action.payload);\n    case getType(actions.remove):\n      return domainHelpers.remove(state, action.payload);\n    case getType(actions.setDomain):\n      const { allIds, byId } = action.payload;\n      return { allIds, byId };\n    default:\n      return state;\n  }\n};\n","import { put } from \"redux-saga/effects\";\nimport { testResultActions } from \"store/testResult\";\nimport * as R from \"remeda\";\nimport { utilityHelpers } from \"helpers\";\n\nfunction getOptionalStringValue(valueString: string) {\n  const isEmpty = utilityHelpers.isEmpty(valueString);\n\n  if (isEmpty) return undefined;\n  return valueString;\n}\n\nfunction getOptionalNumberValue(valueString: string) {\n  const isEmpty = utilityHelpers.isEmpty(valueString);\n  if (isEmpty) return undefined;\n\n  const returnValue = Number(valueString.replace(/\\D/g, \"\"));\n  if (isNaN(returnValue)) return undefined;\n\n  return returnValue;\n}\n\nfunction* setDomainFromRawItems(rawItems: Diaverum.RawItem[]) {\n  const testResults = rawItems.map((rawItem) => {\n    const {\n      barcode,\n      clinicNo,\n      collectionDate,\n      collectionTime,\n      patientId,\n      testCode,\n      testName,\n      result,\n      unit,\n      refrangeLow,\n      refrangeHigh,\n      note,\n      nonSpecRefs,\n    } = rawItem;\n    if (barcode === \"4010000912\") {\n    }\n    const collected = `${collectionDate}, ${collectionTime}`;\n\n    const realResult: Diaverum.ResultType =\n      result !== \"Pending\" ? Number(result) : result;\n    const testResult: Diaverum.TestResult = {\n      id: barcode,\n      barcode: Number(barcode),\n      clinicId: clinicNo,\n      patientId,\n      collected,\n      testCode,\n      testName,\n      result: realResult,\n      unit: utilityHelpers.isEmpty(unit) ? undefined : unit,\n      refrangeLow: getOptionalNumberValue(refrangeLow),\n      refrangeHigh: getOptionalNumberValue(refrangeHigh),\n      note: getOptionalStringValue(note),\n      nonSpecRefs: getOptionalStringValue(nonSpecRefs),\n    };\n    return testResult;\n  });\n\n  const byId = R.indexBy(testResults, R.prop(\"id\"));\n  const allIds = Object.keys(byId);\n  yield put(testResultActions.setDomain({ byId, allIds }));\n}\n\nexport { setDomainFromRawItems };\n","import {\n  all,\n  takeLatest,\n  fork,\n  select,\n  call,\n  put,\n  delay,\n} from \"redux-saga/effects\";\n\nimport { ActionType } from \"typesafe-actions\";\nimport { appActions, appConstants } from \"store/app\";\nimport { statusActions } from \"store/status\";\nimport { patientHelpers, patientSelectors } from \"store/patient\";\nimport { testResultHelpers } from \"store/testResult\";\n\nimport Fuse from \"fuse.js\";\nimport { fileHelpers, parserHelpers, utilityHelpers } from \"helpers\";\n\nfunction* initializeSaga() {\n  try {\n    yield put(\n      statusActions.setRequestStatus({\n        request: \"initilized\",\n        status: \"loading\",\n      })\n    );\n\n    yield delay(600); // simulate loading\n\n    const text: string = yield call(fileHelpers.readTextFile, [\n      \"data\",\n      \"data.txt\",\n    ]);\n\n    const rawItems: Diaverum.RawItem[] = parserHelpers.parseText(text);\n\n    yield call(patientHelpers.setDomainFromRawItems, rawItems);\n    yield call(testResultHelpers.setDomainFromRawItems, rawItems);\n\n    const allPatientIds: string[] = yield select(patientSelectors.allIds);\n    yield put(appActions.setSearchPatientIds(allPatientIds));\n  } catch (error) {\n    yield put(\n      statusActions.setRequestStatus({\n        request: \"initilized\",\n        status: \"error\",\n      })\n    );\n  } finally {\n    yield put(\n      statusActions.setRequestStatus({\n        request: \"initilized\",\n        status: \"done\",\n      })\n    );\n  }\n}\n\nfunction* startSearchSaga(action: ActionType<typeof appActions.startSearch>) {\n  try {\n    yield put(\n      statusActions.setRequestStatus({\n        request: \"searching\",\n        status: \"loading\",\n      })\n    );\n    yield delay(400);\n    const search = action.payload;\n    if (utilityHelpers.isEmpty(search)) {\n      const allPatientIds: string[] = yield select(patientSelectors.allIds);\n      yield put(appActions.setSearchPatientIds(allPatientIds));\n      return;\n    }\n    const items: Diaverum.Patient[] = yield select(patientSelectors.allItems);\n    const options: Fuse.IFuseOptions<Diaverum.Patient> = {\n      keys: [\n        { name: \"name\", weight: 1 },\n        { name: \"id\", weight: 2 },\n      ],\n      shouldSort: true,\n      threshold: 0.2,\n    };\n    const fuse = new Fuse(items, options);\n    const searchResultIds = fuse\n      .search(search)\n      .map((fuseResultItem) => fuseResultItem.item.id);\n    yield put(appActions.setSearchPatientIds(searchResultIds));\n  } catch (error) {\n    yield put(\n      statusActions.setRequestStatus({\n        request: \"searching\",\n        status: \"error\",\n      })\n    );\n    console.log(error);\n  } finally {\n    yield put(\n      statusActions.setRequestStatus({\n        request: \"searching\",\n        status: \"done\",\n      })\n    );\n  }\n}\n\nfunction* startSelectSaga(action: ActionType<typeof appActions.startSelect>) {\n  try {\n    yield put(\n      statusActions.setRequestStatus({\n        request: \"select_patient\",\n        status: \"loading\",\n      })\n    );\n\n    const patientId = action.payload;\n    yield put(appActions.setSelectedPatientId(patientId));\n\n    yield delay(1000);\n  } catch (error) {\n    yield put(\n      statusActions.setRequestStatus({\n        request: \"select_patient\",\n        status: \"error\",\n      })\n    );\n    console.log(error);\n  } finally {\n    yield put(\n      statusActions.setRequestStatus({\n        request: \"select_patient\",\n        status: \"done\",\n      })\n    );\n  }\n}\n\nexport function* watcher() {\n  yield fork(initializeSaga);\n  yield all([\n    yield takeLatest(appConstants.START_SEARCH, startSearchSaga),\n    yield takeLatest(appConstants.START_SELECT, startSelectSaga),\n  ]);\n}\n","/* eslint-disable no-case-declarations */\nimport { getType } from \"typesafe-actions\";\nimport { AppAction, AppState, appActions as actions } from \"store/app\";\n\nconst initialState: AppState = {\n  searchPatientIds: [],\n  selectedPatientId: null,\n};\n\nexport default (\n  state: AppState = initialState,\n  action: AppAction\n): AppState => {\n  switch (action.type) {\n    case getType(actions.setSearchPatientIds):\n      return { ...state, searchPatientIds: action.payload };\n    case getType(actions.setSelectedPatientId):\n      return { ...state, selectedPatientId: action.payload };\n    default:\n      return state;\n  }\n};\n","import Types from \"Types\";\nimport { createSelector } from \"reselect\";\nimport { patientSelectors } from \"store/patient\";\nimport * as R from \"remeda\";\nexport const searchPatientIds = (state: Types.RootState) =>\n  state.app.searchPatientIds;\n\nexport const selectedPatientId = (state: Types.RootState) =>\n  state.app.selectedPatientId;\n\nexport const selectedPatient = createSelector(\n  selectedPatientId,\n  patientSelectors.byId,\n  (patientId, patientById) =>\n    patientId ? R.pipe(patientById, R.prop(patientId)) : null\n);\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"@emotion/styled\";\nimport Search from \"components/ui/Search\";\nimport { color, spacing } from \"variables\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { appActions } from \"store/app\";\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  onPatientSearch: (search: string) => dispatch(appActions.startSearch(search)),\n});\n\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\ntype Props = DispatchProps;\nconst SearchPatient: FunctionComponent<Props> = (props) => {\n  const { onPatientSearch } = props;\n  return (\n    <Wrapper>\n      <Search onSearch={onPatientSearch} placeholder=\"search for patient...\" />\n    </Wrapper>\n  );\n};\n\nexport default connect(null, mapDispatchToProps)(SearchPatient);\n\nconst Wrapper = styled.div`\n  background-color: ${color.DARK};\n  border-bottom: ${spacing.TINY}px solid ${color.BLACK};\n  border-top-left-radius: ${spacing.MEDIUM}px;\n  padding: ${spacing.LARGE}px;\n`;\n","import React, { FunctionComponent, useMemo } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { SerializedStyles } from \"@emotion/core\";\n\nimport getStyle from \"./styled\";\n\nconst Span = styled.span<{ css: SerializedStyles }>`\n  ${({ css }) => css}\n`;\n\ntype OwnProps = {\n  text: string;\n  type?: Styles.TextType;\n  size?: Styles.BaseSize;\n  variation?: Styles.TextVariation;\n};\n\ntype ElementProps = Pick<\n  React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLSpanElement>,\n    HTMLSpanElement\n  >,\n  \"ref\"\n>;\ntype Props = OwnProps & ElementProps;\n\nconst TextComponent: FunctionComponent<Props> = ({\n  text,\n  size = \"medium\",\n  type = \"standard\",\n  variation,\n  ...restProps\n}) => {\n  const styles = useMemo(() => getStyle(type, size, variation), [\n    size,\n    type,\n    variation,\n  ]);\n  return (\n    <Span className=\"text\" css={styles} {...restProps}>\n      {text}\n    </Span>\n  );\n};\n\nexport default TextComponent;\n","import React, { FunctionComponent, useMemo } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css, SerializedStyles } from \"@emotion/core\";\n\ntype Props = { columns: number[] };\n\nconst Row: FunctionComponent<Props> = (props) => {\n  const { children, columns } = props;\n  const columnsStyle = useMemo(() => {\n    const templateColumns = columns.map((column) => `${column}fr`).join(\" \");\n    return css`\n      grid-template-columns: ${templateColumns};\n    `;\n  }, [columns]);\n  return (\n    <Wrapper css={columnsStyle} className=\"hej\">\n      {children}\n    </Wrapper>\n  );\n};\n\nexport default Row;\n\nconst Wrapper = styled.div<{ css: SerializedStyles }>`\n  display: grid;\n  width: 100%;\n  ${({ css }) => css}\n`;\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { spacing } from \"variables\";\n\ntype Props = Partial<Pick<System.HeaderColumn, \"align\">>;\n\nconst Column: FunctionComponent<Props> = (props) => {\n  const { children, align = \"flex-start\" } = props;\n  return <Wrapper align={align}>{children}</Wrapper>;\n};\n\nexport default Column;\n\nconst Wrapper = styled.div<{ align: string }>`\n  overflow: hidden;\n  display: flex;\n  justify-content: ${({ align }) => align};\n  align-items: center;\n  padding: 0 ${spacing.LARGE}px;\n`;\n","import React, { FunctionComponent } from \"react\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport Text from \"components/ui/Text\";\n\ntype Props = { headerColumns: System.HeaderColumn[] };\nconst HeaderRow: FunctionComponent<Props> = (props) => {\n  const { headerColumns } = props;\n\n  return (\n    <Row columns={headerColumns.map((headerColum) => headerColum.fr)}>\n      {headerColumns.map(({ title, align }, index) => (\n        <Column key={index} align={align}>\n          <Text text={title} variation={{ bold: true }} />\n        </Column>\n      ))}\n    </Row>\n  );\n};\n\nexport default HeaderRow;\n","import React, { FunctionComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport Types from \"Types\";\nimport styled from \"@emotion/styled\";\nimport Text from \"components/ui/Text\";\nimport { patientSelectors } from \"store/patient\";\nimport { HEADER_COLUMNS } from \"./index\";\nimport { Row, Column } from \"components/ui/Row\";\nconst mapStateToProps = (state: Types.RootState, { patientId }: OwnProps) => ({\n  patient: patientSelectors.item(state, { patientId }),\n});\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype OwnProps = { patientId: string };\n\ntype Props = StateProps & OwnProps;\n\nconst Patient: FunctionComponent<Props> = (props) => {\n  const { patient } = props;\n\n  return (\n    <Row columns={HEADER_COLUMNS.map((column) => column.fr)}>\n      <Column align={HEADER_COLUMNS[0] && HEADER_COLUMNS[0].align}>\n        <Text text={patient.id} />\n      </Column>\n      <Column align={HEADER_COLUMNS[1] && HEADER_COLUMNS[1].align}>\n        <Text text={patient.name} />\n      </Column>\n      <Column align={HEADER_COLUMNS[2] && HEADER_COLUMNS[2].align}>\n        <Text text={`${patient.testIds.length}`} />\n      </Column>\n    </Row>\n  );\n};\n\nexport default connect(mapStateToProps)(Patient);\n","import styled from \"@emotion/styled\";\nimport { zIndex } from \"variables\";\n\nconst List = styled.ul`\n  width: 100%;\n  position: relative;\n  z-index: ${zIndex.TOP_CONTENT};\n`;\nexport default List;\n","import React, { FunctionComponent, useMemo } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\n\nimport { color, spacing } from \"variables\";\n\ntype Props = {\n  active?: boolean;\n  onClick?(): void;\n  header?: boolean;\n  filler?: boolean;\n  size?: Styles.BaseSize;\n};\nconst ListItem: FunctionComponent<Props> = (props) => {\n  const {\n    children,\n    active = false,\n    header = false,\n    filler = false,\n    size = \"medium\",\n    onClick,\n  } = props;\n  const rowHeight = useMemo(() => {\n    switch (size) {\n      case \"small\":\n        return spacing.VERY_LARGE;\n      case \"medium\":\n        return spacing.VERY_LARGE + spacing.LARGE;\n      case \"large\":\n        return spacing.HUGE;\n    }\n  }, [size]);\n  return (\n    <Wrapper\n      className=\"list-item\"\n      aria-expanded={!header && active}\n      onClick={onClick}\n      header={header}\n      hoverable={!filler}\n      height={rowHeight}\n    >\n      {children}\n    </Wrapper>\n  );\n};\n\nexport default ListItem;\n\nconst headerCss = css`\n  background-color: ${color.BLACK};\n  .text,\n  .icon {\n    color: ${color.WHITE};\n  }\n`;\n\nconst rowCss = css`\n  background-color: ${color.WHITE};\n\n  :nth-of-type(2n-1) {\n    background-color: ${color.LIGHT};\n  }\n`;\n\nconst hoverCss = css`\n  &:hover,\n  &[aria-expanded=\"true\"] {\n    background-color: ${color.SHADOW};\n  }\n`;\nconst heightCss = (height: number) => css`\n  height: ${height}px;\n`;\nconst specificCss = ({\n  header,\n  hoverable,\n  height,\n}: {\n  header: boolean;\n  hoverable: boolean;\n  height: number;\n}) => {\n  return css`\n    ${header ? headerCss : rowCss}\n    ${hoverable && !header && hoverCss}\n    ${heightCss(height)}\n  `;\n};\n\nconst Wrapper = styled.li<{\n  header: boolean;\n  hoverable: boolean;\n  height: number;\n}>`\n  display: flex;\n  align-items: center;\n  ${specificCss}\n`;\n","import React, { FunctionComponent, useMemo } from \"react\";\nimport styled from \"@emotion/styled\";\nimport List from \"./List\";\nimport ListItem from \"./ListItem\";\nimport * as R from \"remeda\";\nimport { zIndex } from \"variables\";\n\ntype Props = {\n  numberOfItems: number;\n  size?: Styles.BaseSize;\n  header?: boolean;\n};\n\nconst FillerList: FunctionComponent<Props> = (props) => {\n  const { numberOfItems, size = \"medium\", header = false } = props;\n\n  const fillers = useMemo(() => {\n    return R.times(numberOfItems, (n) => (\n      <ListItem key={n} filler={true} size={size} />\n    ));\n  }, [numberOfItems, size]);\n  return (\n    <EmptyList>\n      {header && (\n        <ListItem key=\"header\" filler={true} size={size} header={header} />\n      )}\n      {fillers}\n    </EmptyList>\n  );\n};\n\nexport default FillerList;\n\nconst EmptyList = styled(List)`\n  position: absolute;\n  top: 0;\n  z-index: ${zIndex.BACK_CONTENT};\n  max-height: 100%;\n  overflow: hidden;\n  height: 100%;\n`;\n","import React, { FunctionComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport Types from \"Types\";\nimport styled from \"@emotion/styled\";\nimport { color, spacing } from \"variables\";\nimport Loader from \"components/ui/Loader\";\nimport SearchPatient from \"./SearchPatient\";\nimport Patient from \"./PatientRow\";\nimport { appSelectors, appActions } from \"store/app\";\nimport { statusSelectors } from \"store/status\";\nimport { HeaderRow } from \"components/ui/Row\";\nimport { List, ListItem, FillerList } from \"components/ui/List\";\n\nexport const HEADER_COLUMNS: System.HeaderColumn[] = [\n  { fr: 1, title: \"no\", align: \"center\" },\n  { fr: 4, title: \"name\" },\n  { fr: 1, title: \"tests\", align: \"flex-end\" },\n];\nconst mapStateToProps = (state: Types.RootState) => ({\n  resultPatientIds: appSelectors.searchPatientIds(state),\n  isSearching: statusSelectors.requestStatus(state, \"searching\") === \"loading\",\n  selectedPatientId: appSelectors.selectedPatientId(state),\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  selectPatientId: (patientId: string) =>\n    dispatch(appActions.startSelect(patientId)),\n});\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\ntype OwnProps = {};\n\ntype Props = StateProps & DispatchProps & OwnProps;\n\nconst Browser: FunctionComponent<Props> = (props) => {\n  const {\n    resultPatientIds,\n    isSearching,\n    selectedPatientId,\n    selectPatientId,\n  } = props;\n  return (\n    <Wrapper>\n      <SearchPatient />\n      <div className=\"patients\">\n        <Loader isLoading={isSearching} />\n        <List>\n          <ListItem key=\"header\" header={true} size=\"small\">\n            <HeaderRow headerColumns={HEADER_COLUMNS} />\n          </ListItem>\n          {resultPatientIds.map((patientId) => (\n            <ListItem\n              key={patientId}\n              active={patientId === selectedPatientId}\n              onClick={() => selectPatientId(patientId)}\n              size=\"small\"\n            >\n              <Patient patientId={patientId} />\n            </ListItem>\n          ))}\n        </List>\n        <FillerList numberOfItems={50} size=\"small\" />\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Browser);\n\nconst Wrapper = styled.div`\n  width: 33%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  border-right: ${spacing.VERY_SMALL}px solid ${color.BLACK};\n  > div.patients {\n    width: 100%;\n    overflow-y: auto;\n    flex-grow: 1;\n    position: relative;\n  }\n`;\n","import React, { FunctionComponent } from \"react\";\nimport { color, spacing } from \"variables\";\nimport styled from \"@emotion/styled\";\nimport Text from \"components/ui/Text\";\n\ntype Props = { label: string; text: string };\n\nconst LabeledText: FunctionComponent<Props> = (props) => {\n  const { label, text } = props;\n  return (\n    <Wrapper>\n      <Text text={`${label}:`} size=\"small\" />\n      <Text text={text} size=\"medium\" />\n    </Wrapper>\n  );\n};\n\nexport default LabeledText;\n\nconst Wrapper = styled.div`\n  height: ${spacing.VERY_LARGE + spacing.LARGE}px;\n  display: flex;\n  align-items: center;\n  .text {\n    &:first-of-type {\n      text-transform: uppercase;\n      color: ${color.DARK};\n      width: ${spacing.HUGE * 2}px;\n    }\n    &:not(:first-of-type) {\n      padding: 0 ${spacing.MEDIUM}px;\n      flex-grow: 1;\n      border-bottom: ${spacing.VERY_SMALL}px dotted ${color.DARK};\n      line-height: ${spacing.VERY_LARGE}px;\n    }\n  }\n`;\n","import React, { FunctionComponent, useMemo } from \"react\";\nimport { connect } from \"react-redux\";\nimport Types from \"Types\";\nimport { testResultSelectors } from \"store/testResult\";\nimport { Row, Column } from \"components/ui/Row\";\nimport Text from \"components/ui/Text\";\nimport Icon from \"components/ui/Icon\";\nimport { HEADER_COLUMNS } from \"./index\";\n\nconst mapStateToProps = (\n  state: Types.RootState,\n  { testResultId }: OwnProps\n) => ({\n  testResult: testResultSelectors.item(state, { testResultId }),\n});\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype OwnProps = { testResultId: string };\n\ntype Props = StateProps & OwnProps;\n\nconst TestResultRow: FunctionComponent<Props> = (props) => {\n  const {\n    testResult: {\n      collected,\n      testCode,\n      testName,\n      result,\n      unit,\n      barcode,\n      refrangeHigh,\n      refrangeLow,\n    },\n  } = props;\n\n  const diagnoseColumnm = useMemo(() => {\n    // range exists\n    if (refrangeLow && refrangeHigh) {\n      return result >= refrangeLow && result <= refrangeHigh ? (\n        <Icon type=\"happy-face\" size=\"small\" />\n      ) : (\n        <Icon type=\"sad-face\" size=\"small\" />\n      );\n    }\n    // higher limit exists\n    if (refrangeHigh && !refrangeLow) {\n      return result <= refrangeHigh ? (\n        <Icon type=\"happy-face\" size=\"small\" />\n      ) : (\n        <Icon type=\"sad-face\" size=\"small\" />\n      );\n    }\n    // lower limit exists\n    if (refrangeLow && !refrangeHigh) {\n      return result >= refrangeLow ? (\n        <Icon type=\"happy-face\" size=\"small\" />\n      ) : (\n        <Icon type=\"sad-face\" size=\"small\" />\n      );\n    }\n    return <Text text=\"-\" />;\n  }, [refrangeHigh, refrangeLow, result]);\n\n  const rangeValue = useMemo(() => {\n    if (!refrangeHigh && refrangeLow) return `>= ${refrangeLow} ${unit}`;\n    if (!refrangeLow && refrangeHigh) return `<= ${refrangeHigh} ${unit}`;\n    if (refrangeLow && refrangeHigh)\n      return `${refrangeLow}-${refrangeHigh} ${unit}`;\n\n    return \"-\";\n  }, [refrangeHigh, refrangeLow, unit]);\n  return (\n    <Row columns={HEADER_COLUMNS.map((column) => column.fr)}>\n      <Column align={HEADER_COLUMNS[0] && HEADER_COLUMNS[0].align}>\n        <Text text={collected} />\n      </Column>\n      <Column align={HEADER_COLUMNS[1] && HEADER_COLUMNS[1].align}>\n        <Text text={`${barcode}`} />\n      </Column>\n      <Column align={HEADER_COLUMNS[2] && HEADER_COLUMNS[2].align}>\n        <Text text={`${testCode}, ${testName}`} />\n      </Column>\n      <Column align={HEADER_COLUMNS[3] && HEADER_COLUMNS[3].align}>\n        {result === \"Pending\" ? (\n          <Text text={result} variation={{ italic: true }} />\n        ) : (\n          <Text text={`${result} ${unit || \"\"}`} />\n        )}\n      </Column>\n      <Column align={HEADER_COLUMNS[4] && HEADER_COLUMNS[4].align}>\n        <Text text={rangeValue} variation={{ italic: true }} />\n      </Column>\n      <Column align={HEADER_COLUMNS[5] && HEADER_COLUMNS[5].align}>\n        {diagnoseColumnm}\n      </Column>\n    </Row>\n  );\n};\n\nexport default connect(mapStateToProps)(TestResultRow);\n","import React, { FunctionComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport Types from \"Types\";\nimport styled from \"@emotion/styled\";\nimport { color, spacing } from \"variables\";\nimport { appSelectors } from \"store/app\";\nimport LabeledText from \"components/ui/LabeledText\";\nimport TestResultRow from \"./TestResultRow\";\nimport Loader from \"components/ui/Loader\";\nimport { FillerList, ListItem, List } from \"components/ui/List\";\nimport { statusSelectors } from \"store/status\";\nimport { HeaderRow } from \"components/ui/Row\";\n\nconst mapStateToProps = (state: Types.RootState) => ({\n  selectedPatient: appSelectors.selectedPatient(state),\n  isSelecting:\n    statusSelectors.requestStatus(state, \"select_patient\") === \"loading\",\n});\n\nexport const HEADER_COLUMNS: System.HeaderColumn[] = [\n  { fr: 1, title: \"collected\" },\n  { fr: 1, title: \"barcode\" },\n  { fr: 2, title: \"test\" },\n  { fr: 1, title: \"result\" },\n  { fr: 1, title: \"range\" },\n  { fr: 1, title: \"diagnostic\", align: \"center\" },\n];\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\n\ntype Props = StateProps;\n\nconst Content: FunctionComponent<Props> = (props) => {\n  const { selectedPatient, isSelecting } = props;\n  return (\n    <Wrapper>\n      <div className=\"patient\">\n        {selectedPatient && (\n          <>\n            <LabeledText label=\"patient no\" text={selectedPatient.id} />\n            <LabeledText label=\"birthdate\" text={selectedPatient.dob} />\n            <LabeledText label=\"name\" text={selectedPatient.name} />\n            <LabeledText\n              label=\"gender\"\n              text={selectedPatient.gender === \"M\" ? \"Male\" : \"Female\"}\n            />\n          </>\n        )}\n      </div>\n\n      <div className=\"test-result\">\n        <Loader isLoading={isSelecting} />\n        <List>\n          <ListItem key=\"header\" header={true} size=\"large\">\n            <HeaderRow headerColumns={HEADER_COLUMNS} />\n          </ListItem>\n          {selectedPatient &&\n            !isSelecting &&\n            selectedPatient.testIds.map((testId) => (\n              <ListItem key={testId} size=\"large\">\n                <TestResultRow testResultId={testId} />\n              </ListItem>\n            ))}\n        </List>\n        <FillerList numberOfItems={50} size=\"large\" header={true} />\n      </div>\n    </Wrapper>\n  );\n};\n\nexport default connect(mapStateToProps)(Content);\n\nconst Wrapper = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  > div.patient {\n    column-count: 2;\n    column-gap: ${spacing.VERY_LARGE}px;\n    column-fill: auto;\n    height: ${spacing.HUGE * 2}px;\n    padding: ${spacing.LARGE}px;\n    width: 100%;\n    background-color: ${color.LIGHT};\n    border-bottom: ${spacing.TINY}px solid ${color.BLACK};\n  }\n\n  > div.test-result {\n    flex-grow: 1;\n    position: relative;\n  }\n`;\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"@emotion/styled\";\nimport Browser from \"./Browser\";\nimport Content from \"./Content\";\nimport { color, spacing } from \"variables\";\n\nconst View: FunctionComponent = () => {\n  return (\n    <Wrapper>\n      <Browser />\n      <Content />\n    </Wrapper>\n  );\n};\n\nexport default View;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  overflow: hidden;\n  width: 1680px;\n  height: 1050px;\n  background-color: ${color.WHITE};\n  border: ${spacing.VERY_SMALL}px solid ${color.BLACK};\n  border-radius: ${spacing.MEDIUM}px;\n`;\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Types from \"Types\";\nimport { statusSelectors } from \"store/status\";\n\nimport styled from \"@emotion/styled\";\nimport { color, zIndex } from \"variables\";\nimport Loader from \"components/ui/Loader\";\nimport View from \"components/view\";\nconst mapStateToProps = (state: Types.RootState) => ({\n  initilizing: statusSelectors.requestStatus(state, \"initilized\") === \"loading\",\n});\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype Props = StateProps;\n\nconst App: FunctionComponent<Props> = ({ initilizing }) => {\n  return (\n    <SiteWrapper>\n      <Loader isLoading={initilizing} />\n      {!initilizing && <View />}\n    </SiteWrapper>\n  );\n};\n\nexport default connect(mapStateToProps)(App);\nconst SiteWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  max-height: 100vh;\n  max-width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${color.DARK};\n  position: absolute;\n  overflow: hidden;\n  z-index: ${zIndex.BASE};\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { patientReducer } from \"store/patient\";\nimport { statusReducer } from \"store/status\";\nimport { testResultReducer } from \"store/testResult\";\nimport { appReducer } from \"store/app\";\n\nconst rootReducer = combineReducers({\n  patientData: patientReducer,\n  testResultData: testResultReducer,\n  statusCommunication: statusReducer,\n  app: appReducer,\n});\n\nexport default rootReducer;\n","import { all, spawn } from \"redux-saga/effects\";\nimport { appSagas } from \"store/app\";\n\nexport function* rootSaga() {\n  return yield all([spawn(appSagas.watcher)]);\n}\n","import { createStore, applyMiddleware, Store, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./root-reducer\";\nimport { rootSaga } from \"./root-saga\";\nimport Types from \"Types\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nconst enhancer = compose(\n  applyMiddleware(...middlewares),\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()\n);\n\nfunction configureStore(initialState?: Types.RootState) {\n  const store: Store<Types.RootState, Types.RootAction> = createStore(\n    rootReducer,\n    initialState,\n    enhancer\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n}\n\nexport default configureStore;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"store\";\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}